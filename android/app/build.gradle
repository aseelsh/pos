
// apply plugin: 'com.android.application'
// apply plugin: 'com.google.gms.google-services'

// apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {

	 namespace "cloud.multipos.pos"
    compileSdkVersion 31
    defaultConfig {
	  
        applicationId "cloud.multipos.pos"
        minSdkVersion 22   // for the e800 23, need level 24 to get camera/fmpeg to work on some tablets
        targetSdkVersion 33
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        versionCode 126
		  buildConfigField "Boolean", "USE_CAMERA", "false" 
		  buildConfigField "String", "VERSION_NAME", "\"2.1.126\"" 
    }

	 signingConfigs {
        release {
            if (project.hasProperty('POS_RELEASE_STORE_FILE')) {
                storeFile file(POS_RELEASE_STORE_FILE)
                storePassword POS_RELEASE_STORE_PASSWORD
                keyAlias POS_RELEASE_KEY_ALIAS
                keyPassword POS_RELEASE_KEY_PASSWORD
            }
        }
	 }
		 		 
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
	 
	 buildFeatures {
        viewBinding true
    }
	 
	 dataBinding {
        enabled true
    }
	 
	 viewBinding {
        enabled true
    }
	 
	 lintOptions {
		  checkReleaseBuilds false
		  abortOnError false
	 }

	 compileOptions {
		  sourceCompatibility JavaVersion.VERSION_1_8
		  targetCompatibility JavaVersion.VERSION_1_8
	 }
	 
    kotlinOptions {
        jvmTarget = "1.8"
    }
	 
	 
	 flavorDimensions "flavor"
	 productFlavors {

		  enGeneric {
				dimension "flavor"
				versionCode defaultConfig.versionCode
				versionName defaultConfig.versionName
		  }
	 }
}

dependencies {

	 // core
	 
	 implementation 'com.google.android.material:material:1.3.0-alpha01'
	 implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
	 testImplementation 'junit:junit:4.12'
	 androidTestImplementation 'androidx.test.ext:junit:1.1.1'
	 androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
	 implementation 'com.android.volley:volley:1.2.1'
	 kapt 'frankiesardo:icepick-processor:3.2.0'
	 kapt 'com.google.auto.service:auto-service:1.0-rc2'
	 implementation 'androidx.core:core-ktx:latest_version'

	 // logger for vim
				  
	 implementation 'org.slf4j:slf4j-log4j12:1.7.12'
				  
	 // hardware libs
				  
	 implementation fileTree(dir: 'libs', include: ['*.jar'])
	 implementation fileTree(dir: 'libs', include: ['*.aar'])
	 implementation 'com.sumup:merchant-sdk:3.2.2'
	 // implementation 'com.journeyapps:zxing-android-embedded:4.3.0'

	 // kotlin
				  
	 implementation 'androidx.core:core-ktx:1.1.0'
	 implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

	 // barcode scanner
				  
	 implementation 'com.google.mlkit:barcode-scanning:17.0.0'

	 // CameraX library
	 
	 def camerax_version = "1.0.0-beta12"
	 	 
    implementation("androidx.camera:camera-core:${camerax_version}")
    implementation("androidx.camera:camera-camera2:${camerax_version}")
    implementation("androidx.camera:camera-lifecycle:${camerax_version}")
	 implementation("androidx.camera:camera-view:1.1.0-beta01")
    implementation("androidx.camera:camera-video:1.1.0-beta01")
    implementation("androidx.camera:camera-extensions:1.1.0-beta01")

	 // mqtt
	 
	 implementation'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.4'
	 implementation'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
}
